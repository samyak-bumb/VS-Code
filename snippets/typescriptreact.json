{
  "Import React": {
    "prefix": "imr",
    "body": ["import * as React from 'react';\n"]
  },

  "Import React and Component": {
    "prefix": "imrc",
    "body": [
      "import * as React from 'react';",
      "import { Component } from 'react';\n"
    ]
  },

  "Import ReactDOM": {
    "prefix": "imrd",
    "body": ["import ReactDOM from 'react-dom';"]
  },

  "Import React, { useState }": {
    "prefix": "imrs",
    "body": [
      "import * as React from 'react';",
      "import { useState } from 'react';\n"
    ]
  },

  "Import React, { useState, useEffect }": {
    "prefix": "imrse",
    "body": [
      "import * as React from 'react';",
      "import { useState, useEffect } from 'react';\n"
    ]
  },

  "Import Pure Component": {
    "prefix": "impc",
    "body": ["import React, { PureComponent } from 'react';\n"]
  },

  "Class Component": {
    "prefix": "cc",
    "body": [
      "interface $1Props {",
      "\t$2",
      "}",
      " ",
      "interface $1State {",
      "\t$3",
      "}",
      " ",
      "class $1 extends React.Component<$1Props, $1State> {",
      "\tstate = { $4: $5 }",
      "\trender() { ",
      "\t\treturn ( $0 );",
      "\t}",
      "}",
      " ",
      "export default $1;"
    ]
  },

  "Class Pure Component": {
    "prefix": "cpc",
    "body": [
      "export interface $1Props {",
      "\t$2",
      "}",
      " ",
      "export interface $1State {",
      "\t$3",
      "}",
      " ",
      "class $1 extends React.PureComponent<$1Props, $1State> {",
      "\tstate = { $4: $5 }",
      "\trender() { ",
      "\t\treturn ( $0 );",
      "\t}",
      "}",
      " ",
      "export default $1;"
    ]
  },

  "Class Component Constructor": {
    "prefix": "ccc",
    "body": [
      "interface $1Props {",
      "\t$2",
      "}",
      " ",
      "interface $1State {",
      "\t$3",
      "}",
      " ",
      "class $1 extends React.Component<$1Props, $1State> {",
      "\tconstructor(props: $1Props) {",
      "\t\tsuper(props);",
      "\t\tthis.state = { $4: $5 };",
      "\t}",
      "\trender() { ",
      "\t\treturn ( $0 );",
      "\t}",
      "}",
      " ",
      "export default $1;"
    ]
  },

  "Function Component": {
    "prefix": "fc",
    "body": [
      "interface $1Props {",
      "\t$2",
      "}",
      " ",
      "const $1: FunctionComponent<$1Props> = ($3) => {",
      "\treturn ( $0 );",
      "}",
      " ",
      "export default $1;"
    ]
  },

  "Function Syntax Component": {
    "prefix": "ffc",
    "body": [
      "function $1($2) {",
      "\treturn ( $0 );",
      "}",
      "",
      "export default $1;"
    ]
  },

  "Stateless Function Component": {
    "prefix": "sfc",
    "body": [
      "const $1 = ($2) => {",
      "\treturn ( $0 );",
      "}",
      " ",
      "export default $1;"
    ]
  },

  "componentDidMount": {
    "prefix": "cdm",
    "body": ["componentDidMount() {", "\t$0", "}"]
  },

  "useEffect": {
    "prefix": "uef",
    "body": [
      "useEffect(() => {",
      "\t$1",
      "}, []);"
    ]
  },

  "componentWillMount": {
    "prefix": "cwm",
    "body": ["//WARNING! To be deprecated in React v17. Use componentDidMount instead.", "componentWillMount() {", "\t$0", "}"]
  },

  "componentWillReceiveProps": {
    "prefix": "cwrp",
    "body": ["//WARNING! To be deprecated in React v17. Use new lifecycle static getDerivedStateFromProps instead.", "componentWillReceiveProps(nextProps: $1Props) {", "\t$0", "}"]
  },

  "getDerivedStateFromProps": {
    "prefix": "gds",
    "body": ["static getDerivedStateFromProps(nextProps: $1Props, prevState: $1State) {", "\t$0", "}"]
  },

  "shouldComponentUpdate": {
    "prefix": "scu",
    "body": ["shouldComponentUpdate(nextProps: $1Props, nextState: $1State) {", "\t$0", "}"]
  },

  "componentWillUpdate": {
    "prefix": "cwu",
    "body": ["//WARNING! To be deprecated in React v17. Use componentDidUpdate instead.", "componentWillUpdate(nextProps: $1Props, nextState: $1State) {", "\t$0", "}"]
  },

  "componentDidUpdate": {
    "prefix": "cdu",
    "body": ["componentDidUpdate(prevProps: $1Props, prevState: $1State) {", "\t$0", "}"]
  },

  "componentWillUnmount": {
    "prefix": "cwun",
    "body": ["componentWillUnmount() {", "\t$0", "}"]
  },

  "componentDidCatch": {
    "prefix": "cdc",
    "body": ["componentDidCatch(error, info) {", "\t$0", "}"]
  },

  "getSnapshotBeforeUpdate": {
    "prefix": "gsbu",
    "body": ["getSnapshotBeforeUpdate(prevProps: $1Props, prevState: $1State) {", "\t$0", "}"]
  },

  "setState": {
    "prefix": "ss",
    "body": ["this.setState({ $1: $2 });"]
  },

  "Functional setState": {
    "prefix": "ssf",
    "body": ["this.setState(prevState => {", "\treturn { $1: prevState.$1 };", "});"]
  },

  "Declare a new state variable using State Hook": {
    "prefix": "usf",
    "body": [
      "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2);"
    ]
  },

  "render": {
    "prefix": "ren",
    "body": ["render() {", "\treturn (", "\t\t $0", "\t);", "}"]
  },

  "Render Prop": {
    "prefix": "rprop",
    "body": [
      "interface $1Props {",
      "\trender: (state: $1State) => JSX.Element",
      "}",
      " ",
      "interface $1State {",
      "\t$2",
      "}",
      " ",
      "class $1 extends React.Component<$1Props, $1State> {",
      "\tstate = { $3: $4 }",
      "\trender() { ",
      "\t\treturn this.props.render(this.state);",
      "\t}",
      "}",
      " ",
      "export default $1;"
    ]
  },"React Component": {
		"prefix": "tsrcc",
		"body": [
			"import * as React from 'react';",
			"",
			"export interface I${1:App}Props {",
			"}",
			"",
			"export default class ${1:} extends React.Component<I${1:}Props> {",
			"  public render() {",
			"    return (",
			"      <div>",
			"        ${2:}",
			"      </div>",
			"    );",
			"  }",
			"}",
			""
		]
	},
	"React Component - Full": {
		"prefix": "tsrcfull",
		"body": [
			"import * as React from 'react';",
			"",
			"export interface I${1:App}Props {",
			"}",
			"",
			"export interface I${1:App}State {",
			"}",
			"",
			"export default class ${1:} extends React.Component<I${1:}Props, I${1:}State> {",
			"  constructor(props: I${1:}Props) {",
			"    super(props);",
			"",
			"    this.state = {",
			"    }",
			"  }",
			"",
			"  public render() {",
			"    return (",
			"      <div>",
			"        ${2:}",
			"      </div>",
			"    );",
			"  }",
			"}",
			""
		]
	},
	"React Component without import and export": {
		"prefix": "tsrcjc",
		"body": [
			"export interface I${1:App}Props {",
			"}",
			"",
			"class ${1:} extends React.Component<I${1:}Props> {",
			"  public render() {",
			"    return (",
			"      <div>",
			"        ${2:}",
			"      </div>",
			"    );",
			"  }",
			"}",
			""
		]
	},
	"React PureComponent": {
		"prefix": "tsrpcc",
		"body": [
			"import * as React from 'react';",
			"",
			"export interface I${1:App}Props {",
			"}",
			"",
			"export default class ${1:} extends React.PureComponent<I${1:}Props> {",
			"  public render() {",
			"    return (",
			"      <div>",
			"        ${2:}",
			"      </div>",
			"    );",
			"  }",
			"}",
			""
		]
	},
	"React PureComponent without import and export": {
		"prefix": "tsrpcjc",
		"body": [
			"export interface I${1:App}Props {",
			"}",
			"",
			"class ${1:} extends React.PureComponent<I${1:}Props> {",
			"  public render() {",
			"    return (",
			"      <div>",
			"        ${2:}",
			"      </div>",
			"    );",
			"  }",
			"}",
			""
		]
	},
	"React Pure Function Component": {
		"prefix": "tsrpfc",
		"body": [
			"import * as React from 'react';",
			"",
			"export interface I${1:App}Props {",
			"}",
			"",
			"export function ${1:} (props: I${1:}Props) {",
			"  return (",
			"    <div>",
			"      ${0}",
			"    </div>",
			"  );",
			"}",
			""
		]
	},
	"Export Default React Pure Function Component": {
		"prefix": "tsdrpfc",
		"body": [
			"import * as React from 'react';",
			"",
			"export interface I${1:App}Props {",
			"}",
			"",
			"export default function ${1:} (props: I${1:}Props) {",
			"  return (",
			"    <div>",
			"      ${0}",
			"    </div>",
			"  );",
			"}",
			""
		]
	},
	"React Stateless Functional Component": {
		"prefix": "tsrsfc",
		"body": [
			"import * as React from 'react';",
			"",
			"interface I${1:App}Props {$2",
			"}",
			"",
			"const ${1:}: React.FunctionComponent<I${1:}Props> = (props) => {",
			"  return $0;",
			"};",
			"",
			"export default ${1:};",
			""
		]
	},
	"constructor": {
		"prefix": "conc",
		"body": [
			"constructor(props) {",
			"  super(props);",
			"  ${1:}",
			"}"
		]
	},
	"componentWillMount": {
		"prefix": "cwm",
		"body": [
			"componentWillMount() {",
			"  ${1:}",
			"}"
		]
	},
	"render": {
		"prefix": "ren",
		"body": [
			"public render() {",
			"  return (",
			"    ${1:}",
			"  );",
			"}"
		]
	},
	"componentDidMount": {
		"prefix": "cdm",
		"body": [
			"componentDidMount() {",
			"  ${1:}",
			"}"
		]
	},
	"componentWillReceiveProps": {
		"prefix": "cwrp",
		"body": [
			"componentWillReceiveProps(nextProps: ${1:}) {",
			"  ${2:}",
			"}"
		]
	},
	"shouldComponentUpdate": {
		"prefix": "scu",
		"body": [
			"shouldComponentUpdate(nextProps: ${1:}, nextState) {",
			"  ${2:}",
			"}"
		]
	},
	"componentWillUpdate": {
		"prefix": "cwu",
		"body": [
			"componentWillUpdate(nextProps: ${1:}, nextState) {",
			"  ${2:}",
			"}"
		]
	},
	"componentDidUpdate": {
		"prefix": "cdu",
		"body": [
			"componentDidUpdate(prevProps: ${1:}, prevState) {",
			"  ${2:}",
			"}"
		]
	},
	"componentWillUnmount": {
		"prefix": "cwum",
		"body": [
			"componentWillUnmount() {",
			"  ${1:}",
			"}"
		]
	},
	"componentSetState": {
		"prefix": "sst",
		"body": [
			"this.setState(${1:});"
		]
	},
	"bind method": {
		"prefix": "bnd",
		"body": [
			"this.${1:} = this.${1:}.bind(this);"
		]
	},
	"method": {
		"prefix": "met",
		"body": [
			"${1:methodName} = (${2:e}) => {",
			"  ${3:}",
			"}"
		]
	},
	"React redux container": {
		"prefix": "tscntr",
		"body": [
			"import * as React from 'react';",
			"import { connect } from 'react-redux'",
			"",
			"export interface I${1:App}Props {",
			"}",
			"",
			"class ${1:} extends React.Component<I${1:}Props> {",
			"  public render() {",
			"    return (",
			"      <div>",
			"        ${2:}",
			"      </div>",
			"    );",
			"  }",
			"}",
			"",
			"const mapState2Props = state => {",
			"  return {",
			"  };",
			"}",
			"",
			"export default connect(mapState2Props)(${1:});",
			""
		]
	},
	"import": {
		"prefix": "imt",
		"body": [
			"import { $2 } from '$1';"
		]
	},
	"getDerivedStateFromProps": {
		"prefix": "gdsfp",
		"body": [
			"static getDerivedStateFromProps(nextProps: ${1:any}, prevState: ${2:any}) {",
			"  ${0}",
			"}"
		]
	},
	"getSnapshotBeforeUpdate": {
		"prefix": "gsbu",
		"body": [
			"getSnapshotBeforeUpdate(prevProps: ${1:any}, prevState: ${2:any}) {",
			"  ${0}",
			"}"
		]
	}
}
