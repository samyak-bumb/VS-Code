// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+alt+win+n",
    "command": "-welcome.showNewFileEntries"
  },
  {
    "key": "alt+f11",
    "command": "editor.action.inspectTMScopes"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "-jupyter.runByLineStop",
    "when": "jupyter.notebookeditor.runByLineInProgress && notebookKernelCount > 0"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "-jupyter.runcurrentcell",
    "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-notebook.cell.executeAndFocusContainer",
    "when": "notebookCellListFocused || editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-notebook.cell.insertCodeCellBelow",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "key": "ctrl+f5",
    "command": "-debug.openView",
    "when": "!debuggersAvailable"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "shift+alt+d",
    "command": "-extension.downloadSettings"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+t",
    "command": "-workbench.action.showAllSymbols"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+shift+n",
    "command": "explorer.newFolder"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+l",
    "command": "-notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "y",
    "command": "-notebook.cell.changeToCode",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
  },
  {
    "key": "m",
    "command": "-notebook.cell.changeToMarkdown",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
  },
  {
    "key": "alt+delete",
    "command": "-notebook.cell.clearOutputs",
    "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-notebook.cell.collapseCellInput",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
  },
  {
    "key": "ctrl+k t",
    "command": "-notebook.cell.collapseCellOutput",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "key": "shift+alt+down",
    "command": "-notebook.cell.copyDown",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "-notebook.cell.copyUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "delete",
    "command": "-notebook.cell.delete",
    "when": "notebookEditable && notebookEditorFocused && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-notebook.cell.edit",
    "when": "notebookCellListFocused && notebookEditable && !inputFocus"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "-notebook.cell.execute",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
  },
  {
    "key": "alt+enter",
    "command": "-notebook.cell.executeAndInsertBelow",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
  },
  {
    "key": "shift+enter",
    "command": "-notebook.cell.executeAndSelectBelow",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-notebook.cell.expandCellInput",
    "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
  },
  {
    "key": "ctrl+k t",
    "command": "-notebook.cell.expandCellOutput",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "key": "ctrl+home",
    "command": "-notebook.focusTop",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+down",
    "command": "-notebook.cell.focusInOutput",
    "when": "notebookCellHasOutputs && notebookEditorFocused"
  },
  {
    "key": "ctrl+end",
    "command": "-notebook.focusBottom",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "down",
    "command": "-notebook.focusNextEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
  },
  {
    "key": "ctrl+down",
    "command": "-notebook.focusNextEditor",
    "when": "notebookEditorFocused && notebookOutputFocused"
  },
  {
    "key": "ctrl+up",
    "command": "-notebook.cell.focusOutOutput",
    "when": "notebookEditorFocused"
  },
  {
    "key": "up",
    "command": "-notebook.focusPreviousEditor",
    "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
  },
  {
    "key": "left",
    "command": "-notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-notebook.fold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "-notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-notebook.cell.insertCodeCellAbove",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "alt+win+j",
    "command": "-notebook.cell.joinBelow",
    "when": "notebookEditorFocused"
  },
  {
    "key": "shift+alt+win+j",
    "command": "-notebook.cell.joinAbove",
    "when": "notebookEditorFocused"
  },
  {
    "key": "alt+down",
    "command": "-notebook.cell.moveDown",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "alt+up",
    "command": "-notebook.cell.moveUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+k ctrl+shift+\\",
    "command": "-notebook.cell.split",
    "when": "notebookCellEditable && notebookEditable && notebookEditorFocused"
  },
  {
    "key": "escape",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "-notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && notebookCellType == 'markup'"
  },
  {
    "key": "right",
    "command": "-notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+shift+]",
    "command": "-notebook.unfold",
    "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+c",
    "command": "copyFilePath"
  },
  {
    "key": "shift+alt+c",
    "command": "-copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+r",
    "command": "-python.refreshTensorBoard",
    "when": "python.hasActiveTensorBoardSession"
  },
  {
    "key": "ctrl+shift+q",
    "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+k f",
    "command": "-workbench.action.closeFolder",
    "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+f4",
    "command": "workbench.action.closeFolder"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "key": "ctrl+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+i",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k ctrl+shift+c",
    "command": "-copyRelativeFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+k ctrl+f",
    "command": "-editor.action.formatSelection",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+f",
    "command": "-notebook.find",
    "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "escape",
    "command": "-notebook.hideFind",
    "when": "notebookEditorFocused && notebookFindWidgetFocused"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "pageup",
    "command": "-workbench.action.interactivePlayground.pageUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "pagedown",
    "command": "-workbench.action.interactivePlayground.pageDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "pagedown",
    "command": "-selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "pageup",
    "command": "workbench.action.terminal.scrollToTop",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "pagedown",
    "command": "workbench.action.terminal.scrollToBottom",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+f5",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.copySelection",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "key": "ctrl+shift+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "-workbench.action.keybindingsReference"
  },
  {
    "key": "alt+d alt+r",
    "command": "liveSass.command.watchMySass"
  },
  {
    "key": "alt+d alt+t",
    "command": "liveSass.command.donotWatchMySass"
  },
  {
    "key": "alt+l alt+i",
    "command": "extension.liveServer.goOffline",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l alt+c",
    "command": "-extension.liveServer.goOffline",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+q",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+shift+i",
    "command": "workbench.action.toggleDevTools"
  },
  {
    "key": "ctrl+shift+i",
    "command": "-workbench.action.toggleDevTools",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+shift+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+shift+b",
    "command": "-workbench.action.tasks.build"
  },
  {
    "key": "ctrl+k p",
    "command": "-workbench.action.files.copyPathOfActiveFile"
  },
  {
    "key": "ctrl+k ctrl+r",
    "command": "workbench.action.openGlobalKeybindingsFile"
  },
  {
    "key": "ctrl+shift+w i",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "ctrl+shift+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+k n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "ctrl+/",
    "command": "-toggleExplainMode",
    "when": "suggestWidgetVisible"
  },
  {
    "key": "alt+a",
    "command": "keybindings.editor.resetKeybinding",
    "when": "keybindingFocus"
  },
  {
    "key": "ctrl+shift+.",
    "command": "-breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible"
  },
  {
    "key": "ctrl+shift+a s",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  {
    "key": "escape",
    "command": "notifications.clearAll",
    "when": "notificationFocus || notificationToastsVisible"
  },
  {
    "key": "alt+z",
    "command": "-extension.cssrem.rem-switch-px"
  },
  {
    "key": "ctrl+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+numpad1",
    "command": "workbench.action.customizeLayout"
  },
  {
    "key": "shift+f1",
    "command": "workbench.action.openProcessExplorer"
  },
  {
    "key": "f1",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+shift+a x",
    "command": "editor.action.indentUsingSpaces"
  },
  {
    "key": "shift+alt+d",
    "command": "-editor.detectLanguage",
    "when": "editorTextFocus && !notebookEditable"
  },
  {
    "key": "shift+alt+d",
    "command": "-notebook.cell.detectLanguage",
    "when": "notebookCellEditable && notebookEditable"
  },
  {
    "key": "pagedown",
    "command": "-notebook.cell.cursorPageDown",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "shift+pagedown",
    "command": "-notebook.cell.cursorPageDownSelect",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "pageup",
    "command": "-notebook.cell.cursorPageUp",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "shift+pageup",
    "command": "-notebook.cell.cursorPageUpSelect",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "ctrl+shift+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "alt+r",
    "command": "-toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+a `",
    "command": "workbench.action.terminal.killAll"
  },
  {
    "key": "f5",
    "command": "python.execInTerminal-icon",
    "when": "editorLangId == 'python'"
  },
  {
    "key": "shift+enter",
    "command": "-notebook.cell.executeAndSelectBelow",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "key": "alt+enter",
    "command": "-notebook.cell.executeAndInsertBelow",
    "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "-notebook.cell.execute",
    "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
  },
  {
    "key": "f5",
    "command": "-debug.openView",
    "when": "!debuggersAvailable"
  },
  {
    "key": "ctrl+shift+a c",
    "command": "workbench.extensions.action.clearExtensionsSearchResults"
  },
  {
    "key": "alt+k",
    "command": "keybindings.editor.recordSearchKeys",
    "when": "inKeybindings"
  },
  {
    "key": "alt+k",
    "command": "-keybindings.editor.recordSearchKeys",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "ctrl+shift+a u",
    "command": "workbench.extensions.action.updateAllExtensions"
  },
  {
    "key": "alt+z",
    "command": "code-runner.run"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-code-runner.run"
  },
  {
    "key": "ctrl+shift+a l",
    "command": "workbench.action.editor.changeEOL"
  },
  {
    "key": "ctrl+numpad_add",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "shift+alt+d",
    "command": "bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "alt+f2",
    "command": "workbench.action.openView"
  },
  {
    "key": "ctrl+k w",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "ctrl+m a",
    "command": "git.stageAll"
  },
  {
    "key": "ctrl+m s",
    "command": "git.sync"
  },
  {
    "key": "ctrl+shift+a w",
    "command": "workbench.extensions.action.checkForUpdates"
  },
  {
    "key": "ctrl+shift+a v",
    "command": "workbench.action.clearRecentFiles"
  },
  {
    "key": "ctrl+shift+'",
    "command": "-extension.toggleFilesizeInfo",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+'",
    "command": "editor.action.toggleMinimap"
  },
  {
    "key": "ctrl+shift+.",
    "command": "breadcrumbs.toggle"
  },
  {
    "key": "ctrl+shift+.",
    "command": "-breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "key": "ctrl+shift+.",
    "command": "-breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.zoomOut"
  },
  /*
  // FIXME:
  {
    "key": "ctrl+,",
    "command": "extension.toggleComma",
    "when": "editorTextFocus"
  },
  */
  {
    "key": "ctrl+alt+unknown",
    "command": "-extension.42-comment",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+a h",
    "command": "toggleexcludedfiles.toggle"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-toggleexcludedfiles.toggle",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+shift+a",
    "command": "-notification.acceptPrimaryAction",
    "when": "notificationToastsVisible"
  },
  {
    "key": "ctrl+shift+w s",
    "command": "workbench.action.openSettings"
  },
  {
    "key": "ctrl+,",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "ctrl+numpad9",
    "command": "editor.action.fontZoomReset"
  },
  // FIXME: Change the Shortcut
  {
    "key": "ctrl+m c",
    "command": "copy-word.copy",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+m x",
    "command": "copy-word.cut"
  },
  {
    "key": "ctrl+m v",
    "command": "copy-word.paste"
  },
  {
    "key": "ctrl+shift+left",
    "command": "-cursor-move.CursorWordStartLeftSelect",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+numpad8",
    "command": "glassit.increase"
  },
  {
    "key": "ctrl+alt+z",
    "command": "-glassit.increase"
  },
  {
    "key": "ctrl+numpad2",
    "command": "glassit.decrease"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-glassit.decrease"
  },
  {
    "key": "ctrl+numpad5",
    "command": "center-editor-window.center"
  },
  {
    "key": "ctrl+l",
    "command": "-center-editor-window.center",
    "when": "editorTextFocus || findWidgetVisible"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+shift+`",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+a d",
    "command": "workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+shift+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "ctrl+shift+d",
    "command": "editor.action.addSelectionToPreviousFindMatch"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-markdown-preview-enhanced.runAllCodeChunks",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "alt+,",
    "command": "yo1dog.cursor-trim.trimCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+,",
    "command": "-yo1dog.cursor-trim.lTrimCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+.",
    "command": "-yo1dog.cursor-trim.rTrimCursor",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+m m",
    "command": "git.commitEmpty"
  },
  {
    "key": "ctrl+shift+a t",
    "command": "explorer-exclude.toggleAllOff"
  },
  {
    "key": "ctrl+k delete",
    "command": "fileutils.removeFile"
  },
  {
    "key": "ctrl+n",
    "command": "extension.advancedNewFile"
  },
  {
    "key": "ctrl+alt+n",
    "command": "-extension.advancedNewFile"
  },
  {
    "key": "alt+z",
    "command": "-bracket-select.undo-select",
    "when": "editorTextFocus"
  },
  // FIXME:
  {
    "key": "ctrl+home ctrl+shift",
    "command": "bracket-select.select",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+a",
    "command": "-bracket-select.select",
    "when": "editorTextFocus"
  },
  // FIXME:
  {
    "key": "ctrl+shift+Numpad8",
    "command": "bracket-select.select-include",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+a",
    "command": "-bracket-select.select-include",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+enter",
    "command": "extension.jumpy-word",
    "when": "editorTextFocus"
  },
  {
    "key": "Escape",
    "command": "extension.jumpy-exit",
    "when": "editorTextFocus && jumpy.isJumpyMode"
  },
  {
    "key": "ctrl+f1",
    "command": "-PowerShell.ShowHelp",
    "when": "editorTextFocus && editorLangId == 'powershell'"
  },
  {
    "key": "f8",
    "command": "-PowerShell.RunSelection",
    "when": "editorTextFocus && editorLangId == 'powershell'"
  },
  {
    "key": "ctrl+alt+f9",
    "command": "PowerShell.Debug.Start",
    "when": "editorTextFocus && editorLangId == 'powershell'"
  },
  // FIXME:
  {
    "key": "ctrl+e",
    "command": "workbench.action.quickOpen",
    "when": "inEditorsPicker"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
    // END:
  },
  {
    "key": "ctrl+shift+x",
    "command": "-multiclip.cutMerge",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+f9",
    "command": "ahk++.compilerGui",
    "when": "editorLangId == 'ahk' || editorLangId == 'ahk2'"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "-filterlines.includeLinesWithString"
  },
  {
    "key": "ctrl+alt+f9",
    "command": "ahk++.debug",
    "when": "editorLangId == 'ahk' || editorLangId == 'ahk2'"
  },
  {
    "key": "ctrl+alt+f9",
    "command": "-ahk++.debug",
    "when": "editorLangId == 'ahk' || editorLangId == 'ahk2'"
  },
  {
    "key": "ctrl+k f",
    "command": "workbench.action.selectIconTheme"
  },
  {
    "key": "ctrl+k p",
    "command": "workbench.action.selectProductIconTheme"
  },
  // {
  //   "key": "ctrl+,",
  //   "command": "clever.toggleEnd.comma"
  // },
  {
    "key": "ctrl+shift+a a",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "ctrl+shift+/",
    "command": "workbench.action.hideEditorTabs"
  },
  {
    "key": "ctrl+shift+a /",
    "command": "workbench.action.showMultipleEditorTabs"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-lntoggle.toggle"
  },
  {
    "key": "ctrl+alt+z",
    "command": "editor.action.toggleWordWrap"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+alt+z",
    "command": "workbench.action.terminal.sizeToContentWidth",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
  },
  {
    "key": "alt+z",
    "command": "-workbench.action.terminal.sizeToContentWidth",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
  }
]
